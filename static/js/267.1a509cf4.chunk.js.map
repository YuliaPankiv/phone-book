{"version":3,"file":"static/js/267.1a509cf4.chunk.js","mappings":"kPAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,SAASC,KAA3B,EAGpBC,EAAgB,SAAAJ,GAAK,OAAKA,EAAMC,QAAQC,SAASG,SAA5B,EAGvBC,GAAiBC,EAAAA,EAAAA,IAC5BR,GAN0B,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,SAASM,MAA3B,IAQ/B,SAACN,EAAUM,GACT,OAAOA,EACHN,EAASM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASJ,EAArC,IACpBN,CACL,I,4BCbUW,EAAYC,EAAAA,EAAAA,IAAH,ghB,8BCATC,EAAOD,EAAAA,EAAAA,KAAH,yEAKJE,EAAQF,EAAAA,EAAAA,MAAH,uYAsBLG,EAASH,EAAAA,EAAAA,OAAH,uO,UCvBNI,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,CAAET,KAAM,GAAIU,OAAQ,KAArD,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXtB,GAAWuB,EAAAA,EAAAA,IAAY1B,GACvBM,GAAYoB,EAAAA,EAAAA,IAAYrB,GACxBsB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACdP,GAAQ,SAAAQ,GACN,OAAO,kBAAKA,GAAZ,cAAuBpB,EAAOmB,GAC/B,GACF,EAaD,OACE,UAACd,EAAD,CAAMgB,SAba,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,GAAU,UAAQZ,GAIxB,GAFEnB,EAASgC,OAAS,GAClBhC,EAASiC,MAAK,SAAAlC,GAAO,OAAIA,EAAQS,OAASW,EAAKX,IAA1B,IAErB,OAAO0B,MAAM,GAAD,OAAIf,EAAKX,KAAT,iCAEda,GAASc,EAAAA,EAAAA,KAAW,UAAKJ,KACzBX,EAAQ,CAAEZ,KAAM,GAAIU,OAAQ,IAC7B,EAEC,WACE,UAACJ,EAAD,mBAEE,kBACEsB,KAAK,OACL5B,KAAK,OACLmB,MAAOR,EAAKX,KAEZ6B,MAAM,yIACNC,UAAQ,EACRC,SAAU,SAAAd,GACRD,EAAaC,EACd,QAGL,UAACX,EAAD,kBAEE,kBACEsB,KAAK,MACL5B,KAAK,SACLmB,MAAOR,EAAKD,OAEZmB,MAAM,+FACNC,UAAQ,EACRC,SAAU,SAAAd,GACRD,EAAaC,EACd,QAGL,SAACV,EAAD,CAAQqB,KAAK,SAAb,SAAuBjC,EAAY,aAAe,kBAGvD,E,UC5DKqC,GAAcC,E,QAAAA,IAAY,CAC9BjC,KAAM,SACNkC,aAAc,CAAEpC,OAAQ,IACxBqC,SAAU,CACRC,YAAa,SAAC9C,EAAD,GAAyB,IAAf+C,EAAc,EAAdA,QACrB/C,EAAMQ,OAASuC,CAChB,KAIUD,EAAgBJ,EAAYM,QAA5BF,YCQf,GDP6BJ,EAAYO,QCT1B,WACb,IAAM1B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC0B,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACR3C,KAAK,SACL+B,SAAU,SAAAd,GACRJ,EAASuB,EAAYnB,EAAEC,OAAOC,OAC/B,GAGN,G,UChBYyB,EAAOxC,EAAAA,EAAAA,GAAH,8GAOJyC,EAAOzC,EAAAA,EAAAA,GAAH,wPAaJ0C,EAAS1C,EAAAA,EAAAA,OAAH,4RCpBN2C,EAAc3C,EAAAA,EAAAA,IAAH,kJCIX4C,GDKa5C,EAAAA,EAAAA,OAAH,qICLI,SAAC,GAA8C,IAAD,IAA3C6C,eAAkBR,EAAyB,EAAzBA,GAAIzC,EAAqB,EAArBA,KAAMU,EAAe,EAAfA,OAClDG,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACiC,EAAD,YACE,0BACE,0BAAO/C,IADT,MACuB,0BAAOU,QAE9B,0BACE,SAACoC,EAAD,CAAQI,QAAS,kBAAMrC,GAASsC,EAAAA,EAAAA,IAAcV,GAA7B,EAAjB,UACE,SAAC,MAAD,UAKT,GCfYW,EAAc,WACzB,IAAMC,GAAmBtC,EAAAA,EAAAA,IAAYnB,GACrC,GAAIyD,EAAiB7B,OACnB,OACE,+BACmB,OAAhB6B,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB7B,UACjB,SAACoB,EAAD,UACGS,GACCA,EAAiBC,KAAI,SAAAL,GACnB,OACE,SAACJ,EAAD,WACE,SAACG,EAAD,CAAaC,eAAgBA,KADpBA,EAAeR,GAI7B,OAMd,ECfc,SAASc,IACtB,IAAM1C,GAAWC,EAAAA,EAAAA,MACXnB,GAAYoB,EAAAA,EAAAA,IAAYrB,GAM9B,OAJA8D,EAAAA,EAAAA,YAAU,WACR3C,GAAS4C,EAAAA,EAAAA,MACV,GAAE,CAAC5C,KAGF,iCACE,SAAC6C,EAAA,EAAD,WACE,gDAEF,UAACvD,EAAD,YACE,wCACA,SAACK,EAAD,KACA,SAAC,EAAD,KACA,yBAAMb,GAAa,4BAEnB,SAACyD,EAAD,SAIP,C","sources":["redux/contact/selectors.js","components/App/App.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","redux/contact/filterSlice.js","components/filter/Filter.jsx","components/contactList/ContactList.styled.js","components/Item/Item.styled.js","components/Item/Item.jsx","components/contactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contact.contacts.items;\nexport const selectFilter = state => state.contact.contacts.filter\n\n  export const selectLoading = state =>  state.contact.contacts.isLoading;\n\n\nexport const filterContacts = createSelector(\n  selectContacts,\n  selectFilter,\n  (contacts, filter) => {\n    return filter\n      ? contacts.filter(item => item.name.toLowerCase().includes(filter))\n      : contacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 450px;\n  margin: 50px auto;\n  /* padding: 20px; */\n  /* text-align: center; */\n  border-radius: 6px;\n    background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  box-shadow: inset 0 -3em 3em rgba(0, 0, 0, 0.1), 0 0 0 2px rgb(255, 255, 255),\n    0.3em 0.3em 1em rgba(0, 0, 0, 0.3);\n\n  & h1, h2 {\n    text-align: center;\n    color: #333;\n    /* font-size: 24px; */\n    margin-bottom: 20px;\n  }\n\n & header {\n  border-radius: 4px;\n\n  }\n  `;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  text-align: center;  \n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 10px;\n  color: #555;\n  line-height: 2em;\n\n  input {\n    box-sizing: border-box;\n    width: 100%;\n    padding: 8px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    &:hover\n     {\n      box-shadow: 0px 0px 2px 2px #449cf4;\n      // border:none;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  border-color: #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #449cf4;\n    border-color: #449cf4;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Label } from './ContactForm.styled';\nimport { selectContacts, selectLoading } from '../../redux/contact/selectors';\nimport { addContact } from '../../redux/contact/options';\n\nexport const ContactForm = () => {\n  const [form, setForm] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setForm(prevForm => {\n      return { ...prevForm, [name]: value };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { ...form };\n    const isAvailable =\n      contacts.length > 0 &&\n      contacts.find(contact => contact.name === form.name);\n    if (isAvailable) {\n      return alert(`${form.name} is already in contacts list`);\n    }\n    dispatch(addContact({ ...newContact }));\n    setForm({ name: '', number: '' });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={form.name}\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => {\n            handleChange(e);\n          }}\n        />\n      </Label>\n      <Label>\n        Tel\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={form.number}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={e => {\n            handleChange(e);\n          }}\n        />\n      </Label>\n      <Button type=\"submit\">{isLoading ? 'Loading...' : 'Add contact'}</Button>\n    </Form>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: { filter: '' },\n  reducers: {\n    filterValue: (state, { payload }) => {\n      state.filter = payload;\n    },\n  },\n});\n\nexport const { filterValue } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","import { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { filterValue } from '../../redux/contact/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      id=\"standard-basic\"\n      label=\"Filter\"\n      variant=\"standard\"\n      name=\"filter\"\n      onChange={e => {\n        dispatch(filterValue(e.target.value));\n      }}\n    />\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 10px;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  align-items: center;\n  &:hover {\n    background-color: #449cf43d;\n  }\n`;\n\nexport const Delete = styled.button`\n  /* position: absolute;\n  top: 0;\n  right: 0; */\n\n  margin-left: 40px;\n  border-color: #ccc;\n  border-radius: 4px;\n  font-size: 22px;\n  cursor: pointer;\n  &:hover {\n    background-color: #449cf4;\n    border-color: #449cf4;\n    color: white;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const TodoWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  gap: 15;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const EditButton = styled.button`\n  &:hover,\n  &:focus {\n    background-color: #449cf4;\n    border-color: #449cf4;\n    color: white;\n  }\n`;\n","import { SlUserUnfollow } from 'react-icons/sl';\nimport { Delete } from 'components/contactList/ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contact/options';\nimport { TodoWrapper } from './Item.styled';\n\nexport const ItemContact = ({ currentContact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  return (\n    <TodoWrapper>\n      <p>\n        <span>{name}</span>: <span>{number}</span>\n      </p>\n      <div>\n        <Delete onClick={() => dispatch(deleteContact(id))}>\n          <SlUserUnfollow />\n        </Delete>\n      </div>\n    </TodoWrapper>\n  );\n};\n","import { ItemContact } from 'components/Item/Item';\nimport { Item, List } from './ContactList.styled';\nimport { filterContacts } from '../../redux/contact/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(filterContacts);\n  if (filteredContacts.length) {\n    return (\n      <>\n        {filteredContacts?.length && (\n          <List>\n            {filteredContacts &&\n              filteredContacts.map(currentContact => {\n                return (\n                  <Item key={currentContact.id}>\n                    <ItemContact currentContact={currentContact} />\n                  </Item>\n                );\n              })}\n          </List>\n        )}\n      </>\n    );\n  }\n};\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Delete, Item, List } from './Contacts.styled.js.js';\n// import { deleteContact } from 'redux/user/operation.js';\n// import { selectFilteredContacts } from 'redux/user/selectors.js';\n\n// const Contacts = () => {\n//   const dispatch = useDispatch();\n//   const filteredContacts = useSelector(selectFilteredContacts);\n//   return (\n//     <>\n//       <List>\n//         {filteredContacts.map(({ name, id, number }) => {\n//           return (\n//             <Item key={id}>\n//               <p>\n//                 {name}&nbsp;: {number}\n//               </p>\n//               <Delete type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n//                 Delete\n//               </Delete>\n//             </Item>\n//           );\n//         })}\n//       </List>\n//     </>\n//   );\n// };\n// export default Contacts;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectLoading } from '../redux/contact/selectors';\nimport { fetchContacts } from '../redux/contact/options';\nimport { Container } from '../components/App/App.styled';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport Filter from '../components/filter/Filter';\nimport { ContactList } from '../components/contactList/ContactList';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Container>\n        <h1>Phone book</h1>\n        <ContactForm />\n        <Filter />\n        <div>{isLoading && 'Request in progress...'}</div>\n\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contact","contacts","items","selectLoading","isLoading","filterContacts","createSelector","filter","item","name","toLowerCase","includes","Container","styled","Form","Label","Button","ContactForm","useState","number","form","setForm","dispatch","useDispatch","useSelector","handleChange","e","target","value","prevForm","onSubmit","preventDefault","newContact","length","find","alert","addContact","type","title","required","onChange","filterSlice","createSlice","initialState","reducers","filterValue","payload","actions","reducer","TextField","id","label","variant","List","Item","Delete","TodoWrapper","ItemContact","currentContact","onClick","deleteContact","ContactList","filteredContacts","map","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}