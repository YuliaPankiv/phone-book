{"version":3,"file":"static/js/263.6a35e703.chunk.js","mappings":"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","sources":["redux/contact/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/filter/Filter.jsx","components/contactList/ContactList.styled.js","components/Item/Item.styled.js","components/Item/Item.jsx","components/contactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contact.contacts.items;\nexport const selectFilter = state => state.contact.filter\n\n  export const selectLoading = state =>  state.contact.contacts.isLoading;\n\n\nexport const filterContacts = createSelector(\n  selectContacts,\n  selectFilter,\n  (contacts, filter) => {\n    return filter\n      ? contacts.filter(item => item.name.toLowerCase().includes(filter))\n      : contacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  text-align: center;  \n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 10px;\n  color: #555;\n  line-height: 2em;\n\n  input {\n    box-sizing: border-box;\n    width: 100%;\n    padding: 8px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    &:hover\n     {\n      box-shadow: 0px 0px 2px 2px #449cf4;\n      // border:none;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  font-size: 16px;\n  border-color: #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #449cf4;\n    border-color: #449cf4;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Label } from './ContactForm.styled';\nimport { selectContacts, selectLoading } from '../../redux/contact/selectors';\nimport { addContact } from '../../redux/contact/operations';\n\nexport const ContactForm = () => {\n  const [form, setForm] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setForm(prevForm => {\n      return { ...prevForm, [name]: value };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { ...form };\n\n    if (checkContactNameRepeat(form.name)) {\n      alert(`${form.name} already exists`);\n      return;\n    } else {\n      dispatch(addContact(newContact));\n    }\n    setForm({ name: '', number: '' });\n  };\n\n  const checkContactNameRepeat = name => {\n    const temporaryNameArray = contacts.map(item => item.name.toLowerCase());\n    return temporaryNameArray.includes(name.toLowerCase());\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={form.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Tel\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={form.number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">{isLoading ? 'Loading...' : 'Add contact'}</Button>\n    </Form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { filterValue } from '../../redux/contact/contactSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <TextField\n      id=\"standard-basic\"\n      label=\"Filter\"\n      variant=\"standard\"\n      name=\"filter\"\n      onChange={e => {\n        dispatch(filterValue(e.target.value));\n      }}\n    />\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ol`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 10px;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  align-items: center;\n  &:hover {\n    background-color: #449cf43d;\n  }\n`;\n\nexport const Delete = styled.button`\n  /* position: absolute;\n  top: 0;\n  right: 0; */\n\n  margin-left: 40px;\n  border-color: #ccc;\n  border-radius: 4px;\n  font-size: 22px;\n  cursor: pointer;\n  &:hover {\n    background-color: #449cf4;\n    border-color: #449cf4;\n    color: white;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const TodoWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  gap: 15;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const EditButton = styled.button`\n  &:hover,\n  &:focus {\n    background-color: #449cf4;\n    border-color: #449cf4;\n    color: white;\n  }\n`;\n","import { SlUserUnfollow } from 'react-icons/sl';\nimport { Delete } from 'components/contactList/ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contact/operations';\nimport { TodoWrapper } from './Item.styled';\n\nexport const ItemContact = ({ currentContact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  return (\n    <TodoWrapper>\n      <p>\n        <span>{name}</span>: <span>{number}</span>\n      </p>\n      <div>\n        <Delete onClick={() => dispatch(deleteContact(id))}>\n          <SlUserUnfollow />\n        </Delete>\n      </div>\n    </TodoWrapper>\n  );\n};\n","import { ItemContact } from 'components/Item/Item';\nimport { Item, List } from './ContactList.styled';\nimport { filterContacts } from '../../redux/contact/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(filterContacts);\n  if (filteredContacts.length) {\n    return (\n      <>\n        {filteredContacts?.length && (\n          <List>\n            {filteredContacts &&\n              filteredContacts.map(currentContact => {\n                return (\n                  <Item key={currentContact.id}>\n                    <ItemContact currentContact={currentContact} />\n                  </Item>\n                );\n              })}\n          </List>\n        )}\n      </>\n    );\n  }\n};\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Delete, Item, List } from './Contacts.styled.js.js';\n// import { deleteContact } from 'redux/user/operation.js';\n// import { selectFilteredContacts } from 'redux/user/selectors.js';\n\n// const Contacts = () => {\n//   const dispatch = useDispatch();\n//   const filteredContacts = useSelector(selectFilteredContacts);\n//   return (\n//     <>\n//       <List>\n//         {filteredContacts.map(({ name, id, number }) => {\n//           return (\n//             <Item key={id}>\n//               <p>\n//                 {name}&nbsp;: {number}\n//               </p>\n//               <Delete type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n//                 Delete\n//               </Delete>\n//             </Item>\n//           );\n//         })}\n//       </List>\n//     </>\n//   );\n// };\n// export default Contacts;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectLoading } from '../redux/contact/selectors';\nimport { fetchContacts } from '../redux/contact/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport Filter from '../components/filter/Filter';\nimport { ContactList } from '../components/contactList/ContactList';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <>\n        <h1>Phone book</h1>\n        <ContactForm />\n        <Filter />\n        <div>{isLoading && 'Request in progress...'}</div>\n\n        <ContactList />\n      </>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contact","contacts","items","selectLoading","isLoading","filterContacts","createSelector","filter","item","name","toLowerCase","includes","Form","styled","Label","Button","ContactForm","useState","number","form","setForm","dispatch","useDispatch","useSelector","handleChange","e","target","value","prevForm","checkContactNameRepeat","map","onSubmit","preventDefault","newContact","alert","addContact","type","pattern","title","required","onChange","TextField","id","label","variant","filterValue","List","Item","Delete","TodoWrapper","ItemContact","currentContact","onClick","deleteContact","ContactList","filteredContacts","length","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}